{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleList/PeopleList.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/PageContent/PageContent.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","to","classNames","PersonItem","selectedSlug","born","died","fatherName","motherName","father","mother","PeopleList","people","params","useParams","map","personId","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","currentPeople","peopleCopy","JSON","parse","stringify","forEach","find","getFixedPeople","catch","finally","length","NotFoundPage","PageContent","role","isActive","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7632286b.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={slug}\n      className={\n        classNames({\n          'has-text-danger': sex === 'f',\n        })\n      }\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person;\n  selectedSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    born,\n    died,\n    fatherName,\n    motherName,\n    sex,\n    father,\n    mother,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      className={\n        classNames({ 'has-background-warning': selectedSlug === slug })\n      }\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother && (\n          <PersonLink person={mother} />\n        )}\n\n        {(motherName && !mother) && motherName}\n        {!motherName && '-'}\n      </td>\n      <td>\n        {father && (\n          <PersonLink person={father} />\n        )}\n\n        {(fatherName && !father) && fatherName}\n        {!fatherName && '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem/PersonItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const params = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            selectedSlug={params.personId || ''}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleList } from '../PeopleList/PeopleList';\n\nfunction getFixedPeople(people: Person[]) {\n  const peopleCopy: Person[] = JSON.parse(JSON.stringify(people));\n\n  peopleCopy.forEach(person => {\n    // eslint-disable-next-line no-param-reassign\n    person.mother = people\n      .find(mother => mother.name === person.motherName);\n    // eslint-disable-next-line no-param-reassign\n    person.father = people\n      .find(father => father.name === person.fatherName);\n  });\n\n  return peopleCopy;\n}\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(currentPeople => {\n        setPeople(getFixedPeople(currentPeople));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {(isError && !isLoading) && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!people.length && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {(!!people.length && !isError) && (\n            <PeopleList people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nexport const PageContent = () => {\n  return (\n    <>\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { PageContent } from './components/PageContent/PageContent';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Routes>\n      <Route path=\"/\" element={<PageContent />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":personId\" />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}