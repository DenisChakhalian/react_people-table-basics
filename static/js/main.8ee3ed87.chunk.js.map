{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","types/Person.ts","components/PersonLink/PersonLink.tsx","variables.ts","components/PersonItem/PersonItem.tsx","components/PeopleList/PeopleList.tsx","components/PeoplePage/PeoplePage.tsx","utils/PeopleUtils.ts","components/NotFoundPage/NotFoundPage.tsx","components/PageNavigation/PageNavigation.tsx","components/PageContent/PageContent.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonSex","PersonLink","person","slug","sex","name","to","classNames","Female","TABLE_ATTRIBUTES","PersonItem","selectedSlug","born","died","fatherName","motherName","father","mother","PeopleList","people","useParams","personId","map","attribute","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","currentPeople","find","getPreparedPeople","catch","finally","isDisplayErrorMessage","useMemo","isNoPeopleOnServer","length","isPeopleOnServer","NotFoundPage","PageNavigation","getLinkClass","isActive","role","PageContent","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8ee3ed87.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export interface Person {\n  name: string,\n  sex: PersonSex,\n  born: number,\n  died: number,\n  fatherName: string | null,\n  motherName: string | null,\n  slug: string,\n  mother?: Person,\n  father?: Person,\n}\n\nexport enum PersonSex {\n  Female = 'f',\n  Male = 'm',\n}\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Person, PersonSex } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={slug}\n      className={\n        classNames({\n          'has-text-danger': sex === PersonSex.Female,\n        })\n      }\n    >\n      {name}\n    </Link>\n  );\n};\n","export const NOT_SET_VALUE = '-';\nexport const TABLE_ATTRIBUTES = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { NOT_SET_VALUE } from '../../variables';\n\ntype Props = {\n  person: Person;\n  selectedSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    born,\n    died,\n    fatherName,\n    motherName,\n    sex,\n    father,\n    mother,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      className={\n        classNames({ 'has-background-warning': selectedSlug === slug })\n      }\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || NOT_SET_VALUE\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || NOT_SET_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem/PersonItem';\nimport { TABLE_ATTRIBUTES } from '../../variables';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { personId = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {TABLE_ATTRIBUTES.map(attribute => (\n            <th key={attribute}>\n              {attribute}\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n            selectedSlug={personId}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleList } from '../PeopleList/PeopleList';\nimport { getPreparedPeople } from '../../utils/PeopleUtils';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(currentPeople => {\n        setPeople(getPreparedPeople(currentPeople));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const isDisplayErrorMessage = useMemo(() => {\n    return isError && !isLoading;\n  }, [isError, isLoading]);\n\n  const isNoPeopleOnServer = useMemo(() => {\n    return !people.length && !isLoading && !isError;\n  }, [isError, isLoading, people]);\n\n  const isPeopleOnServer = useMemo(() => {\n    return !!people.length && !isError;\n  }, [isError, isLoading, people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isDisplayErrorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleOnServer && (\n            <PeopleList people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getPreparedPeople(people: Person[]) {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n}\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const PageNavigation = () => {\n  const getLinkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { PageNavigation } from '../PageNavigation/PageNavigation';\n\nexport const PageContent = () => {\n  return (\n    <>\n      <PageNavigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { PageContent } from './components/PageContent/PageContent';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Routes>\n      <Route path=\"/\" element={<PageContent />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":personId\" />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}